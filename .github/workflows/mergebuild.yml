name: AMI Build

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: AMI Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20

          
      - name: Install dependencies check
        run: npm install

      - name: "Setup .env file"
        run: |
          touch .env

      - name: Run tests
        run: npm run test

      - name: Remove node modules
        run: rm -rf node_modules
        
      - name: Zip web application
        run: |
          cd ${{ github.workspace }}
          zip -r webapp.zip . -x "node_modules/*"
          ls -l
        working-directory: ${{ github.workspace }}

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Run Packer init
        id: init
        run: |
          packer init packer.pkr.hcl

      - name: Packer build
        run: |
            packer build -var 'source_ami=ami-06db4d78cb1d3bbf9' \
                    -var 'subnet_id=subnet-04097cdffea4849f6' \
                    -var 'instance_type=t2.micro' \
                    -var 'artifact=${{ github.workspace }}/webapp.zip' \
                    packer.pkr.hcl
        working-directory: ${{ github.workspace }}